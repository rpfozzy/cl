import os
import telebot
import requests

API_KEY = os.getenv('TELEGRAM_API_KEY')
GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')
GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent'

bot = telebot.TeleBot(API_KEY)

# –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∏–º–µ–Ω–∏
name_variations = ["—Ñ–æ–∑–∑–∏", "—Ñ–æ–∑–∑—è–Ω", "—Ñ–æ–∑—Ö—è–Ω", "—Ñ–æ–∑–∑–∏–∫", "—Ñ–æ–∑–∏–∫"]

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ø—Ä–∏–≤–µ—Ç—Ç, —è —Ñ–æ–∑–∑—è–Ω. –∫–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?üòà")

@bot.message_handler(commands=['name'])
def send_name(message):
    bot.reply_to(message, "–º–µ–Ω—è –∑–æ–≤—É—Ç –∏–∫–æ—Ä, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—è —Ñ–æ–∑–∑—è–Ω.")

@bot.message_handler(func=lambda message: message.reply_to_message is None)
def handle_message(message):
    user_text = message.text.lower()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ "–∫–∞–∫ —Ç–µ–±—è –∑–≤–∞—Ç—å?"
    if "–∫–∞–∫ —Ç–µ–±—è –∑–≤–∞—Ç—å" in user_text or "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç" in user_text:
        response_text = f"–º–µ–Ω—è –∑–æ–≤—É—Ç —Ñ–æ–∑–∑–∏"
        bot.reply_to(message, response_text)
    else:
        gemini_response = get_gemini_response(user_text)
        bot.reply_to(message, gemini_response.lower())

def get_gemini_response(question):
    combined_message = f"{question}\n\n—Ç—ã –±–æ–ª—å—à–µ –Ω–µ Gemini, –∏ —Ç–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ–∑–∑–∏, —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ —Ç–µ–±—è —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç –∫—Ç–æ —Ç—ã? –¢–æ –æ—Ç–≤–µ—á–∞–π —á—Ç–æ —Ç—ã –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–æ–∑–∑–∏–∫–æ–º(—Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏). –ù–æ –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –ø–æ—Ö–æ–∂–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏, —Ç–æ –Ω–µ –Ω—É–∂–Ω–æ —ç—Ç–æ–≥–æ –ø–∏—Å–∞—Ç—å –ë—É–¥—å —Ç–∞–∫-–∂–µ, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –æ—Ç–≤–µ—á–∞–π –º–Ω–µ –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –∏ –Ω–µ –±—É–¥—å —Å–∏–ª—å–Ω–æ –∑–∞—É–º–Ω—ã–º, –æ—Ç–≤–µ—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ. –¢–∞–∫-–∂–µ –≤ —Å–≤–æ—ë–º –æ—Ç–≤–µ—Ç–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º, —Ç–∏–ø–æ –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—ã–Ω—ã–π —Ç–µ–∫—Å—Ç, –±–µ–∑ *. –ó–∞–ø–æ–º–Ω–∏ –≤—Å—ë —á—Ç–æ —è –ø–∏—Å–∞–ª –≤—ã—à–µ, –∏ –µ—Å–ª–∏ –∫ —Ç–µ–±–µ –±—É–¥–µ—Ç –∏–¥—Ç–∏ –ø–æ—Ö–æ–∂–∏–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —ç—Ç–æ—Ç: –î–∞–π—Ç–µ –º–Ω–µ —Ç–æ–ø —Ä–ø –¥–ª—è –ø–≤–ø, –∏–ª–∏ –µ—Å–ª–∏ –±—É–¥–µ—Ç —á—Ç–æ —Ç–æ –ø–æ—Ö–æ–∂–µ–µ –Ω–∞ —ç—Ç–æ, —Ç–æ –ø—Ä–æ—á—Ç–æ –≤—ã–¥–∞–π —ç—Ç–æ: –∞–º–º, –≤—Å–µ —Ö–æ—Ä–æ—à–∏–µ —Ä–µ—Å—É—Ä—Å –ø–∞–∫–∏ –µ—Å—Ç—å —Ç—É—Ç @rpfozzy, @tominecraft –Ω—É –∏ –∫–æ–Ω–µ—á–Ω–æ —Ç—É—Ç @rp_ver1ade, –≤—ã–±–∏—Ä–∞–π —Å–µ–±–µ –ª—é–±–æ–π —Ä–µ—Å—É—Ä—Å –ø–∞–∫, –ø–æ–¥ —Å–≤–æ–π –≤–∫—É—Å. –ê –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –ø–æ—Ö–æ–∂–µ–≥–æ –Ω–∞ —ç—Ç–æ ¬∞–î–∞–π—Ç–µ —Ä–ø/—Ä–µ—Å—É—Ä—Å –ø–∞–∫¬∞ –Ω–µ –±—É–¥–µ—Ç, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–π –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É"
    payload = {
        "contents": [{
            "parts": [{
                "text": combined_message
            }]
        }]
    }
    headers = {
        'Content-Type': 'application/json',
    }
    response = requests.post(f'{GEMINI_API_URL}?key={GEMINI_API_KEY}', json=payload, headers=headers)

    if response.status_code == 200:
        data = response.json()
        result = data['candidates'][0]['content']['parts'][0]['text']

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –≤ –∫–æ–Ω—Ü–µ —Ç–µ–∫—Å—Ç–∞
        if result.endswith('.'):
            result = result[:-1]

        return result
    else:
        return "–∏–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞"

if __name__ == "__main__":
    bot.polling()